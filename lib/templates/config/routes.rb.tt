# frozen_string_literal: true

Rails.application.routes.draw do
  root to: "<%= application_namespace_path %>/home#index"

  mount Folio::Engine => "/"

  devise_for :users, class_name: "Folio::User",
                     module: "<%= application_namespace_path %>/folio/users",
                     omniauth_providers: Rails.application.config.folio_users_omniauth_providers

  devise_scope :user do
    get "/users/registrations/edit_password", to: "<%= application_namespace_path %>/folio/users/registrations#edit_password"
    patch "/users/registrations/update_password", to: "<%= application_namespace_path %>/folio/users/registrations#update_password"
    get "/users/invitation", to: "<%= application_namespace_path %>/folio/users/invitations#show", as: nil
    get "/users/auth/conflict", to: "<%= application_namespace_path %>/folio/users/omniauth_callbacks#conflict"
    get "/users/auth/resolve_conflict", to: "<%= application_namespace_path %>/folio/users/omniauth_callbacks#resolve_conflict"
    get "/users/auth/new_user", to: "<%= application_namespace_path %>/folio/users/omniauth_callbacks#new_user"
    post "/users/auth/create_user", to: "<%= application_namespace_path %>/folio/users/omniauth_callbacks#create_user"
  end

  get "/400", to: "errors#page400", via: :all
  get "/404", to: "errors#page404", via: :all
  get "/422", to: "errors#page422", via: :all
  get "/500", to: "errors#page500", via: :all


  scope module: :<%= application_namespace_path %>, as: :<%= application_namespace_path %> do
    resource :search, only: %i[show] do
      get :autocomplete
    end
  end

  scope module: :folio do
    namespace :console do
      namespace :<%= application_namespace_path %> do
      end
    end
  end

  resources :pages, controller: "<%= application_namespace_path %>/pages", only: [:show], path: ""
end
