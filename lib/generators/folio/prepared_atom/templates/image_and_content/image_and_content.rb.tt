# frozen_string_literal: true

class <%= application_namespace %>::Atom::ImageAndContent < Folio::Atom::Base
  ATTACHMENTS = %i[cover]

  STRUCTURE = {
    title: :string,
    content: :richtext,
    button_label: :string,
    url: :url,
    image_side: %w[left right]
  }

  ASSOCIATIONS = {}

  validates :cover_placement,
            presence: true

  validate :validate_one_of_contents

  def image_side_with_fallback
    image_side.presence || "left"
  end

  private
    def validate_one_of_contents
      if title.blank? && content.blank? && button_label.blank?
        errors.add(:content, :blank)
      elsif button_label.present? && url.blank?
        errors.add(:url, :blank)
      end
    end
end

# == Schema Information
#
# Table name: folio_atoms
#
#  id              :bigint(8)        not null, primary key
#  type            :string
#  position        :integer
#  created_at      :datetime         not null
#  updated_at      :datetime         not null
#  placement_type  :string
#  placement_id    :bigint(8)
#  locale          :string
#  data            :jsonb
#  associations    :jsonb
#
# Indexes
#
#  index_folio_atoms_on_placement_type_and_placement_id  (placement_type,placement_id)
#
