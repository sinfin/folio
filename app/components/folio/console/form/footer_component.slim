.f-c-form-footer-spacer class=(@audit ? "f-c-form-footer-spacer--with-audit" : nil)

.f-c-form-footer data=data class=(@audit ? "f-c-form-footer--with-audit" : nil)
  - if @audit && @record
    = render(Folio::Console::Audited::BarComponent.new(audit: @audit,
                                                       record: @record))

  .f-c-form-footer__inner
    .container-fluid.f-c-form-footer__container
      .f-c-form-footer__left
        - if @f
          == cell('folio/console/ui/button',
                  type: :submit,
                  class: 'f-c-form-footer__btn f-c-form-footer__btn--submit',
                  variant: :primary,
                  label: t("folio.console.actions.submit"),
                  icon: :check,
                  data: { test_id: "submit-button" },
                  html_left: content_tag(:span, nil, class: "f-c-form-footer__submit-btn-indicator", data: stimulus_target('submitButtonIndicator')))

          .f-c-form-footer__status
            - if @record && @record.persisted?
              .f-c-form-footer__status-saved.text-success[
                data=saved_at_tooltip
              ]
                = folio_icon(:content_save, height: 16)

            .f-c-form-footer__status-saving
              span.folio-loader.folio-loader--tiny

            .f-c-form-footer__status-unsaved.small.text-danger
              == cell('folio/console/ui/with_icon',
                      t('.unsaved_changes'),
                      icon: :alert,
                      icon_options: { height: 16 })

      .f-c-form-footer__right
        - if preview_path_with_default
          == cell('folio/console/ui/button',
                  href: preview_path_with_default,
                  class: 'f-c-form-footer__btn f-c-form-footer__btn--preview',
                  variant: :gray,
                  label: t('folio.console.actions.preview'),
                  icon: :open_in_new,
                  target: "_blank",
                  data: { test_id: "preview-button" })

        .f-c-form-footer__collapsible
          .f-c-form-footer__collapsible-backdrop data=stimulus_action(click: "toggleCollapsed")
          .f-c-form-footer__collapsible-content
            - if @record
              = render(Folio::Console::Autosave::ToggleComponent.new(record: @record))

              = render(Folio::Console::Audited::DropdownComponent.new(audits: controller.instance_variable_get(:@audited_audits),
                                                                      audit: @audit,
                                                                      record: @record))

            .f-c-form-footer__settings
              .f-c-form-footer__settings-toggle.small.text-muted[
                data=stimulus_action(click: "toggleSettings")
              ]
                == cell('folio/console/ui/with_icon',
                        t('.settings'),
                        hover: :underline,
                        icon: :cog,
                        icon_options: { height: 16 })

              .f-c-form-footer__settings-backdrop[
                data=stimulus_action(click: "toggleSettings")
              ]

              .f-c-form-footer__settings-content
                = render(Folio::Console::HtmlAutoFormat::ToggleComponent.new)

            - if @share_preview
              .f-c-form-footer__share.small.text-muted data=stimulus_modal_toggle(Folio::Console::SharePreviewModalComponent::CLASS_NAME)
                == cell('folio/console/ui/with_icon',
                        t('.share'),
                        hover: :underline,
                        icon: :link,
                        icon_options: { height: 16 })

          == cell('folio/console/ui/button',
                  class: 'f-c-form-footer__btn f-c-form-footer__btn--collapsible',
                  variant: :gray,
                  icon: :dots_vertical,
                  data: stimulus_action(click: "toggleCollapsed").merge(test_id: "dropdown-button"))
