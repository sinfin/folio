.f-c-files-has-subtitles-form data=data
  .f-c-files-has-subtitles-form__header
    h2.h3.m-0.f-c-files-has-subtitles-form__title = t('.title')

    .f-c-files-has-subtitles-form__status.small
      - case @file.subtitles_cs_state
      - when "ready"
        = t(".subtitles_ready")
      - when "processing"
        span.f-c-files-has-subtitles-form__status-loader-wrap
          span.folio-loader.folio-loader--tiny

        = t(".subtitles_processing")
      - when "failed"
        = folio_icon(:alert, height: 16)
        = t(".subtitles_failed")

    - if @file.subtitles_cs_state != "processing"
      = folio_console_ui_button(variant: :warning,
                                label: t('.retranscribe_subtitles'),
                                size: :sm,
                                icon: :reload,
                                data: stimulus_action("retranscribe"))

  - if @file.subtitles_cs_state != "processing"
    = form do |f|
      = f.input :subtitles_cs_enabled, as: :boolean

      = f.input :subtitles_cs_text, as: :text,
                                    input_html: { rows: 20 },
                                    label: false

      == cell('folio/console/ui/buttons', form_buttons)

  span.folio-loader data=stimulus_target("loader") hidden=true
