div class=bem_class_name
  .f-c-ui-index-header__titles
    h1.f-c-ui-index-header__h1
      a.text-reset.text-decoration-none href=title_url
        = title

    - if @subtitle.present?
      h2.f-c-ui-index-header__h2
        a.text-reset.text-decoration-none href=title_url
          = @subtitle

  - if @klass.respond_to?(:by_label_query) && @by_label_query != false
    = query_form do |f|
      == cell('folio/console/ui/input_with_buttons',
              input: by_label_query_input(f),
              buttons: query_buttons)

      - if controller.send(:index_filters_keys).present?
        - controller.send(:index_filters_keys).each do |key|
          - if controller.params[key].present?
            = f.hidden_field key, value: controller.params[key], id: nil

  - if right_content?
    = right_content

  - if @csv
    == cell('folio/console/ui/button',
            variant: :tertiary,
            href: csv_path,
            icon: :download,
            label: @csv.try(:[], :label) || "CSV")

  - if @new_button != false
    == cell('folio/console/index/new_button',
            klass: @klass,
            file_list_uppy: @file_list_uppy,
            types: @types,
            header: true)

- if @tabs
  .f-c-ui-index-header__tabs-wrap
    == cell('folio/console/index/tabs',
            @tabs,
            index_filters_keys: controller.send(:index_filters_keys),
            params: controller.params)

- if content_above_filters?
  = content_above_filters

- if has_visible_index_filters?
  = render(Folio::Console::Ui::Index::FiltersComponent.new(klass: @klass))

- if @pagy
  = render(Folio::Console::Ui::PagyComponent.new(pagy: @pagy,
                                                 options: @pagy_options || {}))
