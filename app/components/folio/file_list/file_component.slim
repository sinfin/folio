.f-file-list-file data=data
  div[
    class="f-file-list-file__part"
    class="f-file-list-file__part--image"
    data=stimulus_target("imageWrap")
  ]
    .f-file-list-file__image-wrap
      - if @file.present? && @file.respond_to?(:base_thumb)
        .f-file-list-file__image-bg style=image_bg_style

        img.f-file-list-file__image[
          src=@file.base_thumb.url
          loading="lazy"
          alt=@file.file_name
          width=@file.base_thumb.width
          height=@file.base_thumb.height
          data=(@primary_action == :edit ? primary_action_data : nil)
        ]

  - if @template
    = render(Folio::FileList::LoaderComponent.new(data: stimulus_target("loader")))

  - elsif @file.present?
    - if @selectable
      div[
        class="f-file-list-file__part"
        class="f-file-list-file__part--extension"
      ]
        .f-file-list-file__extension
          = @file.try(:file_extension).try(:upcase)

    - if @selectable
      div[
        class="f-file-list-file__part"
        class="f-file-list-file__part--info"
      ]
        - if @file.file_name.present?
          - if @primary_action == :edit
            .f-file-list-file__info-file-name.f-file-list-file__info-file-name--interactive[
              data=primary_action_data
            ]
              = @file.file_name
          - else
            .f-file-list-file__info-file-name
              = @file.file_name

        - file_information_rows.each do |row|
          .f-file-list-file__info-item.small.text-muted
            = row

      div[
        class="f-file-list-file__part"
        class="f-file-list-file__part--mobile-divider"
        class="f-file-list-file__part--mobile-divider-one"
      ]

      div[
        class="f-file-list-file__part"
        class="f-file-list-file__part--count"
      ]
        - if @file.try(:file_list_count).is_a?(Numeric) && @file.file_list_count > 0
          span.f-file-list-file__count
            = @file.file_list_count

      - if unmet_requirements.present?
        div[
          class="f-file-list-file__part"
          class="f-file-list-file__part--warning"
          data=stimulus_tooltip(unmet_requirements_html, variant: :popover)
        ]
          = folio_icon(:alert)
      - else
        div[
          class="f-file-list-file__part"
          class="f-file-list-file__part--warning"
          class="f-file-list-file__part--warning-blank"
        ]

      - if @file.try(:file_size)
        div[
          class="f-file-list-file__part"
          class="f-file-list-file__part--size"
          class="small text-muted text-nowrap text-end"
        ]
          - if @file.file_size.present?
            = helpers.number_to_human_size(@file.file_size, precision: 0)

      - if @file.respond_to?(:tags)
        div[
          class="f-file-list-file__part"
          class="f-file-list-file__part--tags"
          class="small text-muted"
        ]
          - if @file.tags.present?
            .f-file-list-file__tags
              - @file.tags.each do |file_tag|
                  span.f-file-list-file__tag = file_tag

      - if @file.try(:file_list_source).present?
        div[
          class="f-file-list-file__part"
          class="f-file-list-file__part--source"
        ]
          span.f-file-list-file__source
            = @file.file_list_source

    div[
      class="f-file-list-file__part"
      class="f-file-list-file__part--mobile-divider"
      class="f-file-list-file__part--mobile-divider-two"
    ]

    div[
      class="f-file-list-file__part"
      class="f-file-list-file__part--controls"
    ]
      .f-file-list-file__controls
        - if @primary_action == :edit
          div[
            class="f-file-list-file__control"
            class="f-file-list-file__control--primary"
            data=primary_action_data
          ]

        a[
          class="f-file-list-file__control"
          class="f-file-list-file__control--download"
          href=download_href
          target="_blank"
        ]
          = folio_icon(:download)

        - if @editable
          button[
            class="f-file-list-file__control"
            class="f-file-list-file__control--edit"
            type="button"
            data=stimulus_action("edit", { url: modal_api_url })
          ]
            = folio_icon(:edit_box)

        - if destroy_url
          button[
            class="f-file-list-file__control"
            class="f-file-list-file__control--destroy"
            class="text-danger"
            class=(indestructible_reason ? "f-file-list-file__control--disabled" : nil)
            type="button"
            data=(indestructible_reason ? stimulus_tooltip(indestructible_reason) : stimulus_action("destroy", { url: destroy_url }))
          ]
            = folio_icon(:delete)
