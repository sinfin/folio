div class=wrap_class_name
  - if model[:merge]
    == cell('folio/console/merges/index/header')

  - if model && model[:records].present?
    - if collection_actions
      .f-c-catalogue__collection-actions-bar hidden=true
        .f-c-catalogue__collection-actions-bar-count-wrap
          .f-c-catalogue__collection-actions-bar-count 0
          span.f-c-catalogue__collection-actions-bar-count-ico.mi content_copy

        - collection_actions.each do |action|
          = collection_action_for(action)

        span.f-c-catalogue__collection-actions-bar-close
          span.mi close

    .f-c-catalogue__table
      .f-c-catalogue__header
        - if model[:merge]
          .f-c-catalogue__header-cell[
            class="f-c-catalogue__header-cell--merge"
          ]

        - if collection_actions
          .f-c-catalogue__header-cell[
            class="f-c-catalogue__header-cell--collection-actions"
          ]
            label[
              class="f-c-catalogue__collection-actions-label"
            ]
              input[
                class="form-check-input"
                class="f-c-catalogue__collection-actions-checkbox-all"
                type="checkbox"
              ]

        = header_html

      - if model[:ancestry]
        - model[:records].each do |rec, children|
          .f-c-catalogue__row.f-c-catalogue__row--ancestry-root[
            data-depth="0"
            class=(row_class_lambda ? row_class_lambda.call(rec) : nil)
          ]
            = record_html(rec)

          = render_ancestry_children(children)

      - else
        - model[:records].each_with_index do |rec, i|
          = before_lambda.call(rec, model[:records], i) if before_lambda

          - html = record_html(rec)

          - if html.present?
            .f-c-catalogue__row[
              class=(row_class_lambda ? row_class_lambda.call(rec) : nil)
            ]
              - if model[:merge]
                .f-c-catalogue__cell.f-c-catalogue__cell--merge
                  == cell('folio/console/merges/index/radios', rec)

              - if collection_actions
                .f-c-catalogue__cell.f-c-catalogue__cell--collection-actions
                  label[
                    class="f-c-catalogue__collection-actions-label"
                  ]
                    input[
                      class="form-check-input"
                      class="f-c-catalogue__collection-actions-checkbox"
                      type="checkbox"
                      name="ids[]"
                      value=rec.id
                    ]

              = html

          = after_lambda.call(rec, model[:records], i) if after_lambda

  - else
    == cell('folio/console/index/no_records', klass)

  span.folio-loader.f-c-catalogue__loader

- if model[:merge]
  == cell('folio/console/merges/index/footer', klass)
