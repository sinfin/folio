div class=class_name
  .f-c-index-header__titles
    h1.f-c-index-header__h1
      a.text-reset.text-decoration-none href=title_url
        = title

    - if options[:subtitle].present?
      h2.f-c-index-header__h2
        a.text-reset.text-decoration-none href=title_url
          = options[:subtitle]

  - if model.respond_to?(:by_label_query) && options[:by_label_query] != false
    = query_form do |f|
      == cell('folio/console/ui/input_with_buttons',
              input: by_label_query_input(f),
              buttons: query_buttons)

      - if controller.send(:index_filters_keys).present?
        - controller.send(:index_filters_keys).each do |key|
          - if controller.params[key].present?
            = f.hidden_field key, value: controller.params[key], id: nil

  - if options[:right]
    == options[:right]

  - if options[:csv]
    == cell('folio/console/ui/button',
            variant: :tertiary,
            href: csv_path,
            icon: :download,
            label: options[:csv].try(:[], :label) || "CSV")

  - if options[:new_button] != false
    == cell('folio/console/index/new_button',
            klass: model,
            react: options[:react_new],
            types: options[:types],
            new_path_name: options[:new_path_name],
            popover: options[:new_button_popover],
            new_dropdown_links: options[:new_dropdown_links],
            header: true)

  - if show_transportable_dropdown?
    .f-c-index-header__transportable-dropdown
      == cell('folio/console/transportable/dropdown', model)

- if options[:tabs]
  .f-c-index-header__tabs-wrap
    == cell('folio/console/index/tabs',
            options[:tabs],
            index_filters_keys: controller.send(:index_filters_keys),
            params: controller.params)

- if options[:above_filters]
  == options[:above_filters]

- if options[:index_filters] != false && has_visible_index_filters?
  == cell('folio/console/index/filters',
          klass: model,
          cancel_url: options[:filters_cancel_url])

- if options[:pagy]
  == cell('folio/console/pagination', options[:pagy],
                                      inside: options[:inside_pagination])
