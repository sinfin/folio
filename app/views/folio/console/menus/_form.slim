= form_header f
  - if f.object.persisted?
    == cell('folio/console/ui/button',
            variant: :success,
            class: 'f-c-js-menus-form-add',
            icon: :plus,
            label: t('folio.console.javascript.addMenuItem'))

- if f.object.new_record?
  = f.input :title, hint: false

  - types = @klass.creatable_types_for_select
  - if types.size > 1
    = f.input :type, collection: @klass.creatable_types_for_select, \
                     include_blank: false
  - else
      = f.hidden_field :type, value: types.first.second

  - locales = current_site.locales.map(&:presence).compact
  - if locales.size > 1
    = f.input :locale, collection: locales,
                       include_blank: false
  - else
    = f.hidden_field :locale, value: locales.first

- else
  / required for atom select filtering by site to work
  = f.input :site_id, as: :hidden, atom_setting: :site_id

  - unless f.object.class.try(:singleton?)
    = f.input :title, hint: false

  .folio-react-wrap.folio-react-wrap--menu-form[
    data-menupaths=@serialized_menu_paths
    data-menuitems=@serialized_menu_items
    data-menudepth=@menu.class.max_nesting_depth
    data-menustyles=@menu.class.styles_for_react_select(site: current_site, locale: I18n.locale)
  ]

= form_footer f
