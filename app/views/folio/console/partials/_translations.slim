javascript:
  window.FolioConsole = window.FolioConsole || {}

  window.FolioConsole.translations = {
    add: '#{t('folio.console.javascript.add')}',
    addMenuItem: '#{t('folio.console.javascript.addMenuItem')}',
    addPlaceholder: '#{t('folio.console.javascript.addPlaceholder')}',
    altHint: '#{t('simple_form.hints.defaults.alt')}',
    atomSplittableJoinSubmit: '#{t('folio.console.javascript.atomSplittableJoinSubmit')}',
    atomSplittableJoinText: '#{t('folio.console.javascript.atomSplittableJoinText')}',
    atomSplittableJoinTitle: '#{t('folio.console.javascript.atomSplittableJoinTitle')}',
    atomSplittingSubmit: '#{t('folio.console.javascript.atomSplittingSubmit')}',
    atomSplittingText: '#{t('folio.console.javascript.atomSplittingText')}',
    atomSplittingTitle: '#{t('folio.console.javascript.atomSplittingTitle')}',
    blank: '#{t('folio.console.blank')}',
    cancel: '#{t('folio.console.javascript.cancel')}',
    cancelChanges: '#{t('folio.console.javascript.cancelChanges')}',
    clearDate: '#{t('folio.console.javascript.clearDate')}',
    close: '#{t('folio.console.javascript.close')}',
    confirmation: '#{t('folio.console.confirmation')}',
    create: '#{t('folio.console.javascript.create')}',
    destroy: '#{t('folio.console.javascript.destroy')}',
    deleteSubtitleConfirm: '#{t('folio.console.javascript.deleteSubtitleConfirm')}',
    details: '#{t('folio.console.javascript.details')}',
    errorGeneric: '#{t('folio.console.javascript.errorGeneric')}',
    failedToAddLanguage: '#{t('folio.console.javascript.failedToAddLanguage')}',
    failedToDeleteSubtitle: '#{t('folio.console.javascript.failedToDeleteSubtitle')}',
    invalidServerResponse: '#{t('folio.console.javascript.invalidServerResponse')}',
    languageAlreadyAdded: '#{t('folio.console.javascript.languageAlreadyAdded')}',
    pleaseSelectLanguage: '#{t('folio.console.javascript.pleaseSelectLanguage')}',
    documentsManagement: '#{t('folio.console.documents_management')}',
    done: '#{t('folio.console.atoms.settings_header.done')}',
    download: '#{t('folio.console.javascript.download')}',
    downloadOriginal: '#{t('folio.console.javascript.downloadOriginal')}',
    editOffset: '#{t('folio.console.javascript.editOffset')}',
    errorNotification: '#{t('simple_form.error_notification.default_message')}',
    "file/author": '#{Folio::File.human_attribute_name(:author)}',
    "file/attribution_source": '#{Folio::File.human_attribute_name(:attribution_source)}',
    "file/attribution_source_url": '#{Folio::File.human_attribute_name(:attribution_source_url)}',
    "file/attribution_copyright": '#{Folio::File.human_attribute_name(:attribution_copyright)}',
    "file/attribution_licence": '#{Folio::File.human_attribute_name(:attribution_licence)}',
    fileDefaultGravity: '#{Folio::File.human_attribute_name(:default_gravity)}',
    fileDescription: '#{Folio::File.human_attribute_name(:description)}',
    fileNameFilter: '#{t('folio.console.javascript.fileNameFilter')}',
    filePlacementsEmpty: '#{t('folio.console.javascript.filePlacementsEmpty')}',
    filePreviewDuration: '#{Folio::File.human_attribute_name(:preview_duration)}',
    fileSensitiveContent: '#{Folio::File.human_attribute_name(:sensitive_content)}',
    fileTableHeaderFileName: '#{t('folio.console.javascript.fileTableHeaderFileName')}',
    fileTableHeaderFileSize: '#{t('folio.console.javascript.fileTableHeaderFileSize')}',
    fileTableHeaderTags: '#{t('folio.console.javascript.fileTableHeaderTags')}',
    fileTableHeaderType: '#{t('folio.console.javascript.fileTableHeaderType')}',
    fileTitleHint: '#{t('folio.console.javascript.fileTitleHint')}',
    fileAlt:  '#{t('folio.console.javascript.fileAlt')}',
    galleryManagement: '#{t('folio.console.gallery_management')}',
    indestructibleFile: '#{t('folio.console.javascript.indestructibleFile')}',
    indestructibleFiles: '#{t('folio.console.javascript.indestructibleFiles')}',
    link: '#{t('folio.console.javascript.link')}',
    loading: '#{t('folio.console.javascript.loading')}',
    // added exports for file/* i18n used in React
    "file/sensitive_content": '#{Folio::File.human_attribute_name(:sensitive_content)}',
    "file/uploaded": '#{t('folio.console.file.uploaded', default: 'Uploaded')}',
    "file/extract_metadata": '#{t('folio.console.file.extract_metadata', default: 'Extract Metadata')}',
    "file/extracting": '#{t('folio.console.file.extracting', default: 'Extracting...')}',
    "file/no_metadata_found": '#{t('folio.console.file.no_metadata_found', default: 'No metadata found.')}',
    "file/no_metadata_description": '#{t('folio.console.file.no_metadata_description', default: 'Click "Extract Metadata" to automatically extract IPTC/EXIF data from this file.')}',
    "file/essential_information": '#{t('folio.console.file.essential_information', default: 'Essential Information')}',
    "file/rights_attribution": '#{t('folio.console.file.rights_attribution', default: 'Rights & Attribution')}',
    "file/location": '#{t('folio.console.file.location', default: 'Location')}',
    "file/show_advanced_fields": '#{t('folio.console.file.show_advanced_fields', default: 'Show Advanced Fields')}',
    "file/hide_advanced_fields": '#{t('folio.console.file.hide_advanced_fields', default: 'Hide Advanced Fields')}',
    "file/show_technical_data": '#{t('folio.console.file.show_technical_data', default: 'Show Technical Data')}',
    "file/hide_technical_data": '#{t('folio.console.file.hide_technical_data', default: 'Hide Technical Data')}',
    "file/technical_metadata_readonly": '#{t('folio.console.file.technical_metadata_readonly', default: 'Technical Metadata (Read-only)')}',
    "file/not_available": '#{t('folio.console.file.not_available', default: 'Not available')}',
    "file/metadata_extracted_at_prefix": '#{t('folio.console.file.metadata_extracted_at_prefix', default: 'Metadata automatically extracted on')}',
    "file/metadata_extracted_at_suffix": '#{t('folio.console.file.metadata_extracted_at_suffix', default: 'Only blank fields are populated during extraction to preserve manual edits.')}',
    // moved under file/metadata/* (and keep old keys temporarily for BC)
    "file/metadata/headline": '#{t('metadata.headline', default: 'Headline')}',
    "file/metadata/description": '#{t('metadata.description', default: 'Description')}',
    "file/metadata/keywords": '#{t('metadata.keywords', default: 'Keywords')}',
    "file/metadata/creator": '#{t('metadata.creator', default: 'Creator(s)')}',
    "file/metadata/caption_writer": '#{t('metadata.caption_writer', default: 'Caption Writer')}',
    "file/metadata/intellectual_genre": '#{t('metadata.intellectual_genre', default: 'Genre')}',
    "file/metadata/subject_codes": '#{t('metadata.subject_codes', default: 'Subject Codes')}',
    "file/metadata/persons_shown": '#{t('metadata.persons_shown', default: 'Persons Shown')}',
    "file/metadata/city": '#{t('metadata.city', default: 'City')}',
    "file/metadata/state_province": '#{t('metadata.state_province', default: 'State/Province')}',
    "file/metadata/country": '#{t('metadata.country', default: 'Country')}',
    "file/metadata/country_code": '#{t('metadata.country_code', default: 'Country Code')}',
    "file/metadata/capture_date": '#{t('metadata.capture_date', default: 'Capture Date')}',
    "file/metadata/gps_latitude": '#{t('metadata.gps_latitude', default: 'GPS Latitude')}',
    "file/metadata/gps_longitude": '#{t('metadata.gps_longitude', default: 'GPS Longitude')}',
    "file/metadata/gps_altitude": '#{t('metadata.gps_altitude', default: 'GPS Altitude')}',
    // legacy keys (to be removed after UI migration)
    "metadata/headline": '#{t('metadata.headline', default: 'Headline')}',
    "metadata/description": '#{t('metadata.description', default: 'Description')}',
    "metadata/keywords": '#{t('metadata.keywords', default: 'Keywords')}',
    "metadata/creator": '#{t('metadata.creator', default: 'Creator(s)')}',
    "metadata/caption_writer": '#{t('metadata.caption_writer', default: 'Caption Writer')}',
    "metadata/intellectual_genre": '#{t('metadata.intellectual_genre', default: 'Genre')}',
    "metadata/subject_codes": '#{t('metadata.subject_codes', default: 'Subject Codes')}',
    "metadata/persons_shown": '#{t('metadata.persons_shown', default: 'Persons Shown')}',
    "metadata/city": '#{t('metadata.city', default: 'City')}',
    "metadata/state_province": '#{t('metadata.state_province', default: 'State/Province')}',
    "metadata/country": '#{t('metadata.country', default: 'Country')}',
    "metadata/country_code": '#{t('metadata.country_code', default: 'Country Code')}',
    "metadata/capture_date": '#{t('metadata.capture_date', default: 'Capture Date')}',
    "metadata/gps_latitude": '#{t('metadata.gps_latitude', default: 'GPS Latitude')}',
    "metadata/gps_longitude": '#{t('metadata.gps_longitude', default: 'GPS Longitude')}',
    "metadata/gps_altitude": '#{t('metadata.gps_altitude', default: 'GPS Altitude')}',
    galleryManagement: '#{t('folio.console.gallery_management')}',
    indestructibleFile: '#{t('folio.console.javascript.indestructibleFile')}',
    indestructibleFiles: '#{t('folio.console.javascript.indestructibleFiles')}',
    link: '#{t('folio.console.javascript.link')}',
    loading: '#{t('folio.console.javascript.loading')}',
    menuItemOpenInNew: '#{Folio::MenuItem.human_attribute_name(:open_in_new)}',
    menuItemUrl: '#{t('folio.console.javascript.menuItemUrl')}',
    menuNoLink: '#{t('folio.console.menus.noLink')}',
    newFilesAttributes: '#{t('folio.console.javascript.newFilesAttributes')}',
    noResults: '#{t('folio.console.javascript.noResults')}',
    paginationEmpty: '#{t('folio.console.javascript.paginationEmpty')}',
    paginationInfo: '#{t('folio.console.javascript.paginationInfo')}',
    paginationNext: '#{t('pagy.nav.next')}',
    paginationPrev: '#{t('pagy.nav.prev')}',
    placementsLabel: '#{t('folio.console.javascript.placementsLabel')}',
    removePrompt: '#{t('folio.console.remove_confirmation')}',
    replace: '#{t('folio.console.javascript.replace')}',
    save: '#{t('folio.console.javascript.save')}',
    saveOffset: '#{t('folio.console.javascript.saveOffset')}',
    selectable: '#{t('folio.console.javascript.selectable')}',
    selectDocument: '#{t('folio.console.javascript.selectDocument')}',
    selected: '#{t('folio.console.javascript.selected')}',
    selectImage: '#{t('folio.console.javascript.selectImage')}',
    selectPlaceholder: '#{t('folio.console.javascript.selectPlaceholder')}',
    split: '#{t('folio.console.javascript.split')}',
    startSplittingAtom: '#{t('folio.console.javascript.startSplittingAtom')}',
    state: '#{t('folio.console.javascript.state')}',
    subtitles: '#{t('folio.console.javascript.subtitles')}',
    tagsHint: '#{t('simple_form.hints.defaults.tag_list')}',
    tagsLabel: '#{t('attributes.tag_list')}',
    thumbnailSizes: '#{t('folio.console.javascript.thumbnailSizes')}',
    title: '#{t('folio.console.javascript.title')}',
    usage: '#{t('folio.console.javascript.usage')}',
    usageFilter: '#{t('folio.console.javascript.usageFilter')}',
    usagePlaceholder: '#{t('folio.console.javascript.usagePlaceholder')}',
    usageUnused: '#{t('folio.console.javascript.usageUnused')}',
    usageUsed: '#{t('folio.console.javascript.usageUsed')}',
    used: '#{t('folio.console.javascript.used')}',
    photoArchivePlaceholder: '#{t('folio.console.javascript.photoArchivePlaceholder')}',
    photoArchiveFromPhotoArchive: '#{t('folio.console.javascript.photoArchiveFromPhotoArchive')}',
    photoArchiveNotFromPhotoArchive: '#{t('folio.console.javascript.photoArchiveNotFromPhotoArchive')}',
    importedFromPhotoArchive: '#{t('folio.console.javascript.importedFromPhotoArchive')}'
  }
