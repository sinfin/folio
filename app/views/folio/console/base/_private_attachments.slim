- key ||= :private_attachments
- body = true unless defined?(body)
- single = false unless defined?(single)
- file_type = f.object.class.reflections[key.to_s].options[:class_name]
- file_klass = file_type.constantize

div[
  class=Folio::Console::PrivateAttachments::FieldsCell::DROPZONE_CLASS_NAME
  data-file-type=f.object.class.reflections[key.to_s].options[:class_name]
  data-file-human-type=(file_klass.try(:human_type) || "document")
  data-dropzone-to-body=body.to_s
  data-dropzone-single=single.to_s
]
  fieldset.mt-4.mb-3 id=key
    h2.mt-0.mb-3 = f.object.class.human_attribute_name(key)

    = f.simple_fields_for key do |g|
      = render partial: 'private_attachment_fields',
               locals: { f: g, body:, single: }

    .links
      = link_to_add_association t('folio.console.actions.add'),
                                f,
                                key,
                                partial: "private_attachment_fields",
                                class: "btn btn-success #{Folio::Console::PrivateAttachments::FieldsCell::DROPZONE_CLASS_NAME}__add",
                                force_non_association_create: single,
                                hidden: single && f.object.send(key).present?

    div[
      class="#{Folio::Console::PrivateAttachments::FieldsCell::DROPZONE_CLASS_NAME}__trigger"
    ]
