/ required for atom select filtering by site to work
= f.input :site_id, as: :hidden, atom_setting: :site_id

= tabs [:content]

.tab-content
  = tab :content
    = publishable_inputs(f)

    .f-c-with-file-picker.row
      .col-md-auto
        = file_picker_for_cover(f)

      .col-md
        == translated_inputs f, :title, folio_label: true
        == translated_inputs f, :slug

    - collection = Folio::Page.recursive_subclasses_for_select
    - if collection.size > 1
      = f.input :type, collection: collection, \
                       include_blank: false

    - if Rails.application.config.folio_pages_locales || \
         Rails.application.config.folio_pages_ancestry
      .row
        - if Rails.application.config.folio_pages_locales
          - locales = Rails.application.config.folio_pages_locales
          - locales = I18n.available_locales unless locales.is_a?(Array)

          .col
            = f.input :locale,
                      collection: locales,
                      include_blank: false,
                      atom_setting: :locale

        - if Rails.application.config.folio_pages_ancestry
          .col
            = f.input :parent_id, \
                      collection: Folio::Page.arrange_as_array, \
                      label_method: :select_option_depth, \
                      value_method: :id

    - if Rails.application.config.folio_pages_perex_richtext
      == translated_inputs f,
                           :perex,
                           as: :redactor,
                           redactor: :perex,
                           folio_perex: true
    - else
      == translated_inputs f,
                           :perex,
                           autosize: true,
                           character_counter: true,
                           folio_perex: true

    = translated_inputs f, :meta_title, character_counter: true
    = translated_inputs f, :meta_description, autosize: true,
                                              character_counter: true
